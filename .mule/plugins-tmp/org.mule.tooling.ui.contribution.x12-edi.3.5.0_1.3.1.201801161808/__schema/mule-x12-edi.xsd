<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:ns2="http://www.mulesoft.org/schema/mule/devkit" xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.mulesoft.org/schema/mule/x12-edi" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"></xs:import>
  <xs:import namespace="http://www.springframework.org/schema/beans" schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"></xs:import>
  <xs:import namespace="http://www.mulesoft.org/schema/mule/core" schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"></xs:import>
  <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" substitutionGroup="mule:abstract-extension" name="config">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mule:abstractExtensionType">
          <xs:annotation>
            <xs:documentation>The X12 EDI Module lets you send and receive X12 EDI messages. Received EDI messages are parsed and converted to map
structures, while send messages are generated from matching map structures.</xs:documentation>
          </xs:annotation>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="schemas">
              <xs:annotation>
                <xs:documentation></xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="schema">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute type="xs:string" use="optional" name="value-ref"></xs:attribute>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute type="xs:string" use="optional" name="ref">
                  <xs:annotation>
                    <xs:documentation>The reference object for this parameter</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute type="xs:string" use="required" name="name">
            <xs:annotation>
              <xs:documentation>Give a name to this configuration so it can be later referenced by config-ref.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" name="useB2BProvider">
            <xs:annotation>
              <xs:documentation>Connect with Anypoint Partner Manager to manage your X12 settings and record processed X12 documents. Settings
fetched from Partner Manager override any local settings. Partner Manager Connector must be set up before enabling this
feature.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="interchangeIdQualifierSelf">
            <xs:annotation>
              <xs:documentation>ID qualifier for Mule in exchange (ISA segment). This value is used in combination with the Self Identification
Interchange ID value, and if one is set the other must also be set. If this value is set, it effects both send
and receive message handling. On the receive side, the ISA Interchange Receiver ID Qualifier must match this
value. On the send side, this value is used as the ISA Interchange Sender ID Qualifier unless overridden in
either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="interchangeIdSelf">
            <xs:annotation>
              <xs:documentation>ID for Mule in exchange (ISA segment). This value is used in combination with the Self Identification Interchange
ID qualifier value, and if one is set the other must also be set. If this value is set, it effects both send and
receive message handling. On the receive side, the ISA Interchange Receiver ID must match this value. On the send
side, this value is used as the ISA Interchange Sender ID unless overridden in either the send configuration or
the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="groupIdSelf">
            <xs:annotation>
              <xs:documentation>Application Code for Mule in group (GS segment). If this value is set, it effects both send and receive message
handling. On the receive side, the GS Application Receiver's Code must match this value. On the send side, this
value is used as the GS Application Sender's Code unless overridden in either the send configuration or the
message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="interchangeIdQualifierPartner">
            <xs:annotation>
              <xs:documentation>ID qualifier for partner in exchange (ISA segment). This value is used in combination with the Partner
Identification Interchange ID value, and if one is set the other must also be set. If this value is set, it
effects both send and receive message handling. On the receive side, the ISA Interchange Sender ID Qualifier must
match this value. On the send side, this value is used as the ISA Interchange Receiver ID Qualifier unless
overridden in either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="interchangeIdPartner">
            <xs:annotation>
              <xs:documentation>ID for partner in exchange (ISA segment). This value is used in combination with the Partner Identification
Interchange ID qualifier value, and if one is set the other must also be set. If this value is set, it effects
both send and receive message handling. On the receive side, the ISA Interchange Sender ID must match this value.
On the send side, this value is used as the ISA Interchange Receiver ID unless overridden in either the send
configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="groupIdPartner">
            <xs:annotation>
              <xs:documentation>Application Code for partner in group (GS segment). If this value is set, it effects both send and receive
message handling. On the receive side, the GS Application Sender's Code must match this value. On the send side,
this value is used as the GS Application Reciever's Code unless overridden in either the send configuration or
the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="X12CharacterEncodingEnumType" use="optional" default="ASCII" name="characterEncoding">
            <xs:annotation>
              <xs:documentation>Character encoding for messages. This character encoding is always used for receive messages. The encoding used
for send messages defaults to this, but may be overridden by the send operation configuration parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="X12CharacterRestrictionEnumType" use="optional" default="EXTENDED" name="stringCharacterSet">
            <xs:annotation>
              <xs:documentation>Characters allowed in string data. Invalid characters are replaced by the substitution character, if used, or
rejected as errors if no substitution character is set or enabled for receive messages in parser options. Either
way the invalid characters are logged, and for receive messages are reported in 997 functional acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="charType" use="optional" name="stringSubstitutionChar">
            <xs:annotation>
              <xs:documentation>Substitution character used to replace invalid characters in string values.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="versionIdentifierSuffix">
            <xs:annotation>
              <xs:documentation>Version identifier code suffix for group (GS segment). If this value is set, it effects both send and receive
message handling. On the receive side, the GS Version / Release / Industry Identifier Code must consist of the
X12 schema version (004010, 005010, etc.) followed by this suffix. If this value is not set, the receive only
verifies that the GS version identifier code starts with the configured schema version. On the send side, the
combination of the X12 schema version and this suffix is used as the GS version identifier code.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="SnipTypeEnumType" use="optional" default="TYPE1_X12" name="snipValidationType">
            <xs:annotation>
              <xs:documentation>HIPAA SNIP validation type to be used. Type 1 is basic X12 syntax. Type 2 adds enforcement of code sets and
syntax rules. The level applies to both parsing and writing transaction sets.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="valueLengthErrorFail">
            <xs:annotation>
              <xs:documentation>Fail when receive value length outside allowed range flag. If true, a transaction with this error is rejected; if
false, the value is used anyway and the transaction is not rejected. In either case the error is logged and
reported in 997 functional acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="invalidCharacterInValueFail">
            <xs:annotation>
              <xs:documentation>Fail when receive value contains invalid characters flag. If true, a transaction with this error is rejected; if
false, the character is either passed through or substituted and the transaction is not rejected. In either case
the error is reported in 997 functional acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="wrongValuesRepeatsFail">
            <xs:annotation>
              <xs:documentation>Fail when receive value is repeated too many times. If true, a transaction with this error is rejected; if false,
the value is accepted and the transaction is not rejected. In either case the error is reported in 997 functional
acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="unknownsSegmentFail">
            <xs:annotation>
              <xs:documentation>Fail when an unknown segment is present in a transaction set. If true, a transaction with this error is rejected;
if false, the segment is ignored and the transaction is not rejected. In either case the error is reported in 997
functional acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="segmentOutOfOrderFail">
            <xs:annotation>
              <xs:documentation>Fail when a segment is out of order in a transaction set. If true, a transaction with this error is rejected; if
false and the segment can be reordered the transaction is not rejected. In either case the error is reported in
997 functional acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="unusedSegmentPresentFail">
            <xs:annotation>
              <xs:documentation>Fail when a segment marked as Unused is included in a transaction set. If true, a transaction with this error is
rejected; if false, the transaction is not rejected and the unused segment is ignored. In either case the error
is reported in 997 functional acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="wrongSegmentsRepeatsFail">
            <xs:annotation>
              <xs:documentation>Fail when a segment occurs too many times in a transaction set. If true, a transaction with this error is
rejected; if false, the transaction is not rejected. In either case the error is reported in 997 functional
acknowledgments.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="reportSegmentErrors">
            <xs:annotation>
              <xs:documentation>Report segment error details to sender in 997/999 flag. If true, the details of any segment errors will be
included in a generated 997/999. If false, the details will not be included.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="requireUniqueInterchangeNumbers">
            <xs:annotation>
              <xs:documentation>Reject an interchange if the Interchange Control Number has previously been processed. The normal behavior is to
record the interchange numbers previously processed and reject any duplicate interchange numbers from the same
partner (as determined by the interchange sender and receiver identification). If false, this instead allows
processing of the received interchange to continue and leaves it to the application flow to track numbers and
handle appropriately.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="requireUniqueGroupNumbers">
            <xs:annotation>
              <xs:documentation>Reject a functional group if the Group Control Number has previously been processed. By default, group numbers
only need to be unique with an interchange. If true, this instead requires group numbers to be unique across all
interchanges received from the same partner and application (as determined by the interchange sender and receiver
identification, combined with the functional group sender and receiver application codes).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="requireUniqueTransactionNumbers">
            <xs:annotation>
              <xs:documentation>Reject a transaction set if the Transaction Set Control Number has previously been processed. By default,
transaction set control numbers only need to be unique with a particular functional group. If true, this instead
requires transaction set numbers to be unique across all functional groups received from the same partner and
application (as determined by the interchange sender and receiver identification, combined with the functional
group sender and receiver application codes).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="ackAllSets">
            <xs:annotation>
              <xs:documentation>Include a separate AK2/AK5 (997) or AK2/IK5 (999) acknowledgment for every received transaction set. By default,
only transaction sets containing errors are included in the acknowledgment, with transaction sets which aren't
included implicitly acknowledged. Changing this flag causes each received transaction set to be explicitly
acknowledged.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="generate999Acks">
            <xs:annotation>
              <xs:documentation>Generate 999 Functional Acknowledgments, rather than 997 Functional Acknowledgments. By default, 997 Functional
Acknowledgment transaction sets are generated for each received interchange. Changing this flag causes 997
Functional Acknowledgments to be generated instead. Note that the current support for 999 Functional
Acknowledgments does not include CTX segment generation.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="true" name="includeFASchema">
            <xs:annotation>
              <xs:documentation>Expect 997 or 999 Functional Acknowledgments and include 997/999 schema. By default, the schema for 997/999
acknowledgment transaction sets is automatically included in the set of schemas used by the X12 EDI Module. If
false, you need to directly specify the 997 and/or 999 schema if you want these to be processed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" default="*" name="dataSeparator">
            <xs:annotation>
              <xs:documentation>Default data element separator character. The configured value is used by default for all output messages, but
can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" default="&gt;" name="componentSeparator">
            <xs:annotation>
              <xs:documentation>Default comoponent element separator character. The configured value is used by default for all output messages,
but can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" default="U" name="repetitionSeparator">
            <xs:annotation>
              <xs:documentation>Default repetition separator character, or 'U' for unused. The configured value is used by default for all output
messages, but can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" default="~" name="segmentTerminator">
            <xs:annotation>
              <xs:documentation>Default segment terminator character. The configured value is used by default for all output messages, but can be
overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="validateBeforeWrite">
            <xs:annotation>
              <xs:documentation>Validate data being writing to the output stream. By default, the connector validates the data as it is being
written to the destination output stream. When this is true, the connector instead checks for errors before any
data is written to the output stream. If any fatal errors are found an exception is thrown from the write
operation listing the errors. This avoids generating partial output when errors occur.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="SegmentWhitespaceEnumType" use="optional" default="NONE" name="lineEnding">
            <xs:annotation>
              <xs:documentation>Line ending to add between segments. This allows you to add line endings between segments to improve the
readability of the output message text.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="sendUniqueGroupNumbers">
            <xs:annotation>
              <xs:documentation>Send unique Group Control Numbers. By default, functional group control numbers are assigned sequentially within
each interchange and are reused in different interchanges. If true, this instead assigns unique group numbers
across all interchanges sent to the same partner and application (as determined by the interchange sender and
receiver identification, combined with the functional group sender and receiver application codes).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="sendUniqueTransactionNumbers">
            <xs:annotation>
              <xs:documentation>Send unique Transaction Set Control Numbers. By default, transaction set control numbers are assigned
sequentially within each functional group and are reused in different groups. If true, this instead assigns
unique transaction set numbers across all interchanges sent to the same partner and application (as determined by
the interchange sender and receiver identification, combined with the functional group sender and receiver
application codes).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="optional" name="implementationConventionReference">
            <xs:annotation>
              <xs:documentation>Implementation convention reference for transactions (ST segment). If this value is set, it is used as the ST
Implementation Convention Reference unless overridden in the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="integerType" use="optional" default="1" name="initialInterchangeNumber">
            <xs:annotation>
              <xs:documentation>The initial Interchange Control Number used for outgoing messages.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="integerType" use="optional" default="1" name="initialGroupNumber">
            <xs:annotation>
              <xs:documentation>The initial Group Control Number used for outgoing messages.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="integerType" use="optional" default="1" name="initialSetNumber">
            <xs:annotation>
              <xs:documentation>The initial Transaction Set Control Number used for outgoing messages.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="booleanType" use="optional" default="false" name="ackRequested">
            <xs:annotation>
              <xs:documentation>Request acknowledgments for sent transactions flag. If true, 997 acknowledgments will be requested for all sent
transactions.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/x12-edi" type="charType" use="optional" default="P" name="defaultUsageIndicator">
            <xs:annotation>
              <xs:documentation>Default interchange usage indicator ("I" for Information, "P" for Production Data, "T" for Test Data).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/x12-edi" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="ReadType" substitutionGroup="mule:abstract-message-processor" name="read">
    <xs:annotation>
      <xs:documentation>Transforms a native EDI document into a Map
&lt;p&gt;</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ReadType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="#[payload]" name="ediContent-ref">
          <xs:annotation>
            <xs:documentation>Native EDI content</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/x12-edi" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="WriteType" substitutionGroup="mule:abstract-message-processor" name="write">
    <xs:annotation>
      <xs:documentation>Transforms a Map into an EDI document
&lt;p&gt;</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="WriteType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="map">
            <xs:annotation>
              <xs:documentation>Map containing message data</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="map">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute type="xs:string" use="optional" name="value-ref"></xs:attribute>
                          <xs:attribute type="xs:string" name="key"></xs:attribute>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
                </xs:sequence>
              </xs:choice>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="interIdQualSelf">
          <xs:annotation>
            <xs:documentation>ISA Interchange Sender ID Qualifier (overrides module configuration setting).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="interIdSelf">
          <xs:annotation>
            <xs:documentation>ISA Interchange Sender ID (overrides module configuration setting).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grpIdSelf">
          <xs:annotation>
            <xs:documentation>GS Application Sender's Code (overrides module configuration setting).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="interIdQualPartner">
          <xs:annotation>
            <xs:documentation>ISA Interchange Receiver ID Qualifier (overrides module configuration setting).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="interIdPartner">
          <xs:annotation>
            <xs:documentation>ISA Interchange Receiver ID (overrides module configuration setting).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grpIdPartner">
          <xs:annotation>
            <xs:documentation>GS Application Receiver's Code (overrides module configuration setting).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="SegmentWhitespaceEnumType">
    <xs:annotation>
      <xs:documentation>Inter-segment white space.</xs:documentation>
    </xs:annotation>
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LF">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LFCR">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CR">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="SnipTypeEnumType">
    <xs:annotation>
      <xs:documentation>HIPAA SNIP validation type.</xs:documentation>
    </xs:annotation>
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="TYPE1_X12">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TYPE2_HIPAA">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="X12CharacterEncodingEnumType">
    <xs:annotation>
      <xs:documentation>Character encodings supported for X12.</xs:documentation>
    </xs:annotation>
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ASCII">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ISO8859_1">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="IBM1047">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UTF8">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="X12CharacterRestrictionEnumType">
    <xs:annotation>
      <xs:documentation>Wrapper around X12 character restrictions, necessary because shading of the base definitions interferes with
Spring configuration (resulting in ClassNotFoundException for X12ConstantsCharacterRestrictionEnumTransformer).</xs:documentation>
    </xs:annotation>
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BASIC">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="EXTENDED">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UNRESTRICTED">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="OnNoTokenPolicyEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="EXCEPTION"></xs:enumeration>
          <xs:enumeration value="STOP_FLOW"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="integerType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:integer"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="decimalType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:decimal"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="floatType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:float"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="doubleType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:double"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="dateTimeType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:dateTime"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="longType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:long"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="byteType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:byte"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="booleanType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:boolean"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="anyUriType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:anyURI"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="charType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1"></xs:minLength>
          <xs:maxLength value="1"></xs:maxLength>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
</xs:schema>