<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

    <http:listener-config doc:name="HTTP Listener Configuration" host="0.0.0.0" name="HTTP_Listener_Configuration" port="${http.port}"/>

<!-- Example 1 Start  How to access properties using MEL, how to set a payload dynamically -->   
    <flow name="greetingFlow1">
        <http:listener config-ref="HTTP_Listener_Configuration" doc:name="HTTP" path="greet1"/>

        <set-payload doc:name="Set Payload using username" value="Hello #[message.inboundProperties['http.query.params'].username]"/>
    </flow>
<!-- Example 1 End -->
  
<!-- Example 2 Start  How to dynamically route messages based on the results of a conditional expression -->   
    <flow name="greetingFlow2">
        <http:listener config-ref="HTTP_Listener_Configuration" doc:name="HTTP" path="greet2"/>

        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties['http.query.params'].username == empty]">
                <set-payload doc:name="Set Payload for invalid username" value="#['No username provided']"/>
            </when>
            <otherwise>
                <set-payload doc:name="Set Payload for valid username" value="Hello #[message.inboundProperties['http.query.params'].username]"/>
            </otherwise>
        </choice>
    </flow>
<!-- Example 2 End --> 
 
<!-- Example 3 Start  How to assign variables, how to evaluate a condition --> 
    <flow name="docs-greetingFlow3">
        <http:listener config-ref="HTTP_Listener_Configuration" doc:name="HTTP" path="greet3"/>

        <expression-component doc:name="Store username to flowVars"><![CDATA[flowVars.username = message.inboundProperties['http.query.params'].username]]></expression-component>
        <set-payload doc:name="Set Payload of output file" value="#[message.inboundProperties['http.query.params'].username], #[message.inboundProperties['http.query.params'].age], #[message.inboundProperties['http.query.params'].age >18]"/>
        <file:outbound-endpoint doc:name="Save output file to the folder" path="Path_of_your_choice" responseTimeout="10000"/>
        <set-payload doc:name="Set Payload to Hello 'username'" value="Hello #[flowVars.username]"/>
    </flow>
<!-- Example 3 End -->
 
<!-- Example 4 Start  How to create a map, how to evaluate a condition with DataWeave -->
    <flow name="docs-greetingFlow4">
        <http:listener config-ref="HTTP_Listener_Configuration" doc:name="HTTP" path="greet4"/>

        <expression-component doc:name="Store username to flowVars"><![CDATA[flowVars.username = message.inboundProperties['http.query.params'].username]]></expression-component>
        <set-payload doc:name="Set Payload to formatted output" value="#[['username' : message.inboundProperties['http.query.params'].username, 'age' : message.inboundProperties['http.query.params'].age]]"/>
        <dw:transform-message doc:name="Map to CSV" metadata:id="7376f1c5-3057-4973-8abd-dbb13540e4ad">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/csv header=false
---
[{
	username: payload.username,
	age: payload.age,
	age_of: (payload.age > 18) as :boolean
}]]]></dw:set-payload>
        </dw:transform-message>

        <file:outbound-endpoint doc:name="Save to the folder" path="Path_of_your_choice" responseTimeout="10000"/>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <set-payload doc:name="Set Payload to Hello 'username'" value="Hello #[flowVars.username]"/>
    </flow>
<!-- Example 4 End -->

<!-- Example 5 Start  How to parse XML input with Xpath -->   
    <flow name="docs-greetingFlow5">
        <http:listener config-ref="HTTP_Listener_Configuration" doc:name="HTTP" path="greet5"/>

        <expression-component doc:name="Store username to flowVars"><![CDATA[flowVars.username = xpath('/user/username').text]]></expression-component>
        <set-payload doc:name="Set Payload to formatted output" value="#[xpath('/user/username').text], #[xpath('/user/age').text], #[xpath('/user/age').text > 18]"/>
        <file:outbound-endpoint doc:name="Save to the folder" path="Path_of_your_choice" responseTimeout="10000"/>
        <set-payload doc:name="Set Payload to Hello 'username'" value="Hello #[flowVars.username]"/>
    </flow>
<!-- Example 5 End -->
 
<!-- Example 6 Start  How to parse Java objects -->
    <flow name="greetingFlow6">
        <http:listener config-ref="HTTP_Listener_Configuration" doc:name="HTTP" path="greet6"/>

        <json:json-to-object-transformer doc:name="Convert JSON to Object" returnClass="java.lang.Object"/>
        <expression-component doc:name="Store username to flowVars"><![CDATA[flowVars.username = message.payload.username]]></expression-component>
        <set-payload doc:name="Set Payload to formatted output" value="#[message.payload.username], #[message.payload.age], #[message.payload.age > 18]"/>
        <file:outbound-endpoint doc:name="Save to the folder" path="Path_of_your_choice" responseTimeout="10000"/>
        <set-payload doc:name="Set Payload to Hello 'username'" value="Hello #[flowVars.username]"/>
    </flow>
<!-- Example 6 End -->
</mule>